apiVersion: v1
kind: List
metadata:
  name: razeedash-api
  annotations:
    version: "{{TRAVIS_COMMIT}}"
type: array
items:

  # api

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        version: "{{TRAVIS_COMMIT}}"
        razee.io/git-repo: "{{{GIT_REMOTE}}}"
        razee.io/commit-sha: "{{TRAVIS_COMMIT}}"
      labels:
        razee/watch-resource: "lite"
      name: razeedash-api
    spec:
      replicas: 1
      revisionHistoryLimit: 0
      selector:
        matchLabels:
          app: razeedash-api
      strategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: razeedash-api
            razee/watch-resource: "lite"
          name: razeedash-api
        spec:
          securityContext:
            fsGroup: 999
            runAsUser: 999
          initContainers:
          - env:
            - name: MONGO_URL
              valueFrom:
                secretKeyRef:
                  name: razeedash-secret
                  key: mongo_url
            image: "quay.io/razee/razeedash-api:{{TRAVIS_TAG}}"
            command: ["npm", "run", "wait-mongo"]
            imagePullPolicy: Always
            name: razeedash-api-init
            volumeMounts:
              - name: razeedash-secret-vol
                mountPath: /var/run/secrets/razeeio/razeedash-secret
          containers:
          - env:
            - name: S3_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: razeedash-config
                  key: s3_endpoint
                  optional: true
            - name: S3_LOCATION_CONSTRAINT
              valueFrom:
                configMapKeyRef:
                  name: razeedash-config
                  key: s3_location_constraint
                  optional: true
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: razeedash-secret
                  key: s3_access_key_id
                  optional: true
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: razeedash-secret
                  key: s3_secret_access_key
                  optional: true
            - name: S3_BUCKET_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: razeedash-config
                  key: s3_bucket_prefix
                  optional: true
            - name: MONGO_URL
              valueFrom:
                secretKeyRef:
                  name: razeedash-secret
                  key: mongo_url
            - name: MONGO_DB_NAME
              value: razeedash
            - name: ORG_ADMIN_KEY
              valueFrom:
                secretKeyRef:
                  name: razeedash-secret
                  key: org_admin_key
                  optional: true
            - name: ADD_CLUSTER_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: razeedash-secret
                  key: add_cluster_webhook_url
                  optional: true
            - name: REDIS_CONN_JSON
              value: '{"host":"redis-service", "port": 6379}'
            image: "quay.io/razee/razeedash-api:{{TRAVIS_TAG}}"
            imagePullPolicy: Always
            name: razeedash-api
            ports:
            - containerPort: 3333
              protocol: TCP
            livenessProbe:
              httpGet:
                path: /api/kube/liveness
                port: 3333
              initialDelaySeconds: 5
              periodSeconds: 20
              timeoutSeconds: 2
            resources:
              requests:
                cpu: 100m
                memory: 80Mi
              limits:
                cpu: 500m
                memory: 256Mi
            volumeMounts:
              - name: add-cluster-webhook-headers-vol
                mountPath: /var/run/secrets/razeeio/razeedash-api/add-cluster-webhook-headers
              - name: razeedash-secret-vol
                mountPath: /var/run/secrets/razeeio/razeedash-secret
          volumes:
            - name: add-cluster-webhook-headers-vol
              secret:
                secretName: razeedash-add-cluster-webhook-headers-secret
                optional: true
            - name: razeedash-secret-vol
              secret:
                secretName: razeedash-secret

  # redis

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: redis
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: redis
      template:
        metadata:
          labels:
            app: redis
          name: redis
        spec:
          containers:
            - name: redis
              image: redis:latest
              imagePullPolicy: Always
              ports:
                - containerPort: 6379
                  protocol: TCP
              livenessProbe:
                exec:
                  command:
                    - redis-cli
                    - ping
                initialDelaySeconds: 30
                timeoutSeconds: 5
              resources:
                limits:
                  cpu: 500m
                  memory: 256Mi
                requests:
                  cpu: 1m
                  memory: 64Mi



  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        prometheus.io/probe: 'true'
        prometheus.io/probepath: 'metrics'
        prometheus.io/scrape: 'true'
      name: redis-service
    spec:
      selector:
        app: redis
      ports:
        - protocol: TCP
          port: 6379
          targetPort: 6379
